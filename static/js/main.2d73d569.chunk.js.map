{"version":3,"sources":["components/FormInput.jsx","components/Filter.jsx","components/Contacts.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","number","nameInputId","nanoid","telInputId","submitForm","e","preventDefault","props","onSubmit","reset","setState","NameChange","event","currentTarget","value","action","className","this","htmlFor","id","type","pattern","title","required","onChange","Component","Filter","valueFilter","filterName","placeholder","Contacts","contactsList","onDeleteContact","map","contact","onClick","App","contacts","filter","formSubmitHandler","newContact","check","alert","prevState","filterHandler","filterVisible","normalizedFilter","toLowerCase","includes","deleteContact","console","log","FormInput","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,c,EACdC,WAAaD,c,EAEbE,WAAa,SAACC,GACZA,EAAEC,iBAIF,EAAKC,MAAMC,SAAS,EAAKV,OACzB,EAAKW,S,EAGPA,MAAQ,WACN,EAAKC,SAAS,CAAEX,KAAM,GAAIC,OAAQ,M,EAGpCW,WAAa,SAACC,GACZ,MAAwBA,EAAMC,cAAtBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MAGd,EAAKJ,SAAL,eAAiBX,EAAOe,K,4CAI1B,WACE,OACE,uBAAMC,OAAO,GAAGC,UAAU,YAAYR,SAAUS,KAAKb,WAArD,UACE,wBAAOc,QAASD,KAAKhB,YAArB,UACE,mBAAGe,UAAU,iBAAb,kBAEA,uBACEG,GAAIF,KAAKhB,YACTF,KAAK,OACLiB,UAAU,aACVI,KAAK,OACLN,MAAOG,KAAKnB,MAAMC,KAClBsB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUP,KAAKN,gBAGnB,uBAAOO,QAASD,KAAKd,aACrB,mBAAGa,UAAU,iBAAb,oBACA,uBACEG,GAAIF,KAAKd,WACTiB,KAAK,MACLJ,UAAU,aACVjB,KAAK,SACLe,MAAOG,KAAKnB,MAAME,OAClBqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUP,KAAKN,aAGjB,wBAAQK,UAAU,eAAlB,iC,GA9DWS,aAoEJ5B,ICxCA6B,MA1Bf,YAA0C,IAAzBC,EAAwB,EAAxBA,YAAaH,EAAW,EAAXA,SAOtBI,EAAa1B,cAGnB,OACE,wBAAOgB,QAASU,EAAhB,UACE,mBAAGZ,UAAU,eAAb,mCACA,uBACII,KAAK,OACLrB,KAAK,SACLoB,GAAIS,EACJZ,UAAU,aACVa,YAAY,iFACZf,MAAOa,EACPH,SAAUA,QCvBL,SAASM,EAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,gBAE/C,OACE,6BACGD,EAAaE,KAAI,SAACC,GAAD,OAChB,qBAAqBlB,UAAU,UAA/B,UACGkB,EAAQnC,KADX,KACmBmC,EAAQlC,OACzB,wBACAmC,QAAS,kBAAKH,EAAgBE,EAAQf,KACtCC,KAAK,SACLJ,UAAU,eAHV,0DAFOkB,EAAQf,S,ICGnBiB,E,4MACJtC,MAAQ,CACNuC,SAAU,CACR,CAAElB,GAAI,OAAQpB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEmB,GAAI,OAAQpB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEmB,GAAI,OAAQpB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEmB,GAAI,OAAQpB,KAAM,iBAAkBC,OAAQ,cAEhDsC,OAAQ,I,EAIVC,kBAAoB,SAACC,GACnBA,EAAWrB,GAAKjB,cAEhB,IAAIuC,GAAQ,EACZ,EAAK3C,MAAMuC,SAASJ,KAAI,SAAAC,GAAeA,EAAQnC,OAASyC,EAAWzC,OAEjE2C,MAAM,GAAD,OAAIF,EAAWzC,KAAf,4BACL0C,GAAQ,MAGLA,GACH,EAAK/B,UAAS,SAACiC,GAAD,MAAgB,CAC9BN,SAAS,GAAD,mBAAMM,EAAUN,UAAhB,CAA0BG,S,EAItCI,cAAgB,SAACvC,GAEf,MAAuBA,EAAEQ,cAAlBd,EAAP,EAAOA,KAAOe,EAAd,EAAcA,MACd,EAAKJ,SAAL,eAAiBX,EAAOe,K,EAE1B+B,cAAe,WACb,MAA6B,EAAK/C,MAA1BwC,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,SACVS,EAAmBR,EAAOS,cAChC,OAAOV,EAASC,QAAO,SAAAJ,GAAO,OAAIA,EAAQnC,KAAKgD,cAAcC,SAASF,O,EAExEG,cAAe,SAAC5C,GACd6C,QAAQC,IAAI,SAAU9C,GACtB,EAAKK,UAAU,SAAAiC,GAAS,MAAK,CAC3BN,SAASM,EAAUN,SAASC,QAAO,SAAAJ,GAAO,OAAEA,EAAQf,KAAOd,U,4CAK/D,WACE,OACE,gCAEE,mBAAGW,UAAU,QAAb,uBAFF,IAGE,cAACoC,EAAD,CAAW5C,SAAUS,KAAKsB,oBAC1B,mBAAGvB,UAAU,QAAb,sBAJF,IAME,cAAC,EAAD,CAAQW,YAAaV,KAAKnB,MAAMwC,OAAQd,SAAUP,KAAK2B,gBACvD,cAACd,EAAD,CAAUC,aAAcd,KAAK4B,gBAAiBb,gBAAiBf,KAAKgC,uB,GAvD1DxB,aA4DHW,IC1DAiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2d73d569.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = nanoid();\r\n  telInputId = nanoid();\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    // this.state.contacts.push(this.state.name);\r\n    // console.log(\"submit\", this.state);\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  NameChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    // console.log(value);\r\n    // console.log(name);\r\n    this.setState({ [name]: value });\r\n    // console.log(\"input \", this.state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form action=\"\" className=\"formInput\" onSubmit={this.submitForm}>\r\n        <label htmlFor={this.nameInputId}>\r\n          <p className=\"formInputTitle\">Name</p>\r\n\r\n          <input\r\n            id={this.nameInputId}\r\n            name=\"name\"\r\n            className=\"inputField\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.NameChange}\r\n          />\r\n        </label>\r\n        <label htmlFor={this.telInputId}></label>\r\n        <p className=\"formInputTitle\">Number</p>\r\n        <input\r\n          id={this.telInputId}\r\n          type=\"tel\"\r\n          className=\"inputField\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={this.NameChange}\r\n        />\r\n\r\n        <button className=\"submitButton\">Add contacts</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\n\r\n\r\nfunction Filter({valueFilter, onChange}) {\r\n//  const onChange = (e) => {\r\n//     console.log(e.currentTarget.value)\r\n//     // const {name , value} = e.currentTarget;\r\n//     // this.setState({ [name]: value });\r\n//     // this.setState()\r\n//   }\r\n  const filterName = nanoid();\r\n\r\n\r\n  return (\r\n    <label htmlFor={filterName}>\r\n      <p className=\"search-title\"> Find contact by name</p>\r\n      <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          id={filterName}\r\n          className=\"inputField\"\r\n          placeholder=\"отфильтровать\"\r\n          value={valueFilter}\r\n          onChange={onChange}\r\n        />\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n\r\n","import React from \"react\";\r\n\r\nexport default function Contacts({ contactsList, onDeleteContact }) {\r\n  // console.log(\"massiv\", contactsList);\r\n  return (\r\n    <ul>\r\n      {contactsList.map((contact) => (\r\n        <li key={contact.id} className=\"contact\">\r\n          {contact.name}: {contact.number}\r\n          <button \r\n          onClick={()=> onDeleteContact(contact.id)}\r\n          type=\"button\" \r\n          className=\"deleteButton\">удалить</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport { nanoid } from \"nanoid\";\nimport FormInput from \"./components/FormInput\";\nimport Filter from \"./components/Filter\"\nimport Contacts from \"./components/Contacts\";\n\n\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n    };\n\n\n  formSubmitHandler = (newContact) => {\n    newContact.id = nanoid();\n  \n    let check = true;\n    this.state.contacts.map(contact=> {if (contact.name === newContact.name){\n\n      alert(`${newContact.name} is already in contacs.` );\n      check = false;\n    }} ) ;\n    \n     if (check) {\n      this.setState((prevState) => ({\n      contacts: [...prevState.contacts, newContact],\n    }))}\n  };\n\n  filterHandler = (e) => {\n    // console.log(e)\n    const {name , value} = e.currentTarget;\n    this.setState({ [name]: value });\n    }\n  filterVisible =() => {\n    const { filter, contacts } = this.state\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n}\n  deleteContact =(e) => {\n    console.log(\"delete\", e)\n    this.setState( prevState => ({\n      contacts:prevState.contacts.filter(contact=>contact.id !== e)\n    }))\n  }\n    \n  \n  render() {\n    return (\n      <div>\n        \n        <p className=\"title\">Phonebook</p>;\n        <FormInput onSubmit={this.formSubmitHandler} />\n        <p className=\"title\">Contacts</p>;\n        \n        <Filter valueFilter={this.state.filter} onChange={this.filterHandler}/>\n        <Contacts contactsList={this.filterVisible()} onDeleteContact={this.deleteContact} />\n      </div>\n    );\n  }\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}